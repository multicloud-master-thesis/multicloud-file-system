kind: Service
apiVersion: v1
metadata:
  name: multicloud-csi-controller-service
  namespace: multicloud-system
spec:
  selector:
    app: multicloud-csi-controller
  ports:
    - port: 6379
      name: redis
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: multicloud-csi-controller
  namespace: multicloud-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: multicloud-csi-controller
  template:
    metadata:
      labels:
        app: multicloud-csi-controller
    spec:
      serviceAccountName: multicloud-csi-controller
      containers:
        - name: redis
          image: redis:7.4.2
          ports:
            - containerPort: 6379
          volumeMounts:
            - name: redis-data
              mountPath: /data
        - name: csi-provisioner
          image: registry.k8s.io/sig-storage/csi-provisioner:v5.2.0
          args:
            - "--csi-address=$(ADDRESS)"
            - "--v=5"
            - "--feature-gates=Topology=true"
            - "--leader-election"
          env:
            - name: ADDRESS
              value: /var/lib/csi/sockets/pluginproxy/csi.sock
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/csi/sockets/pluginproxy/
        - name: csi-attacher
          image: registry.k8s.io/sig-storage/csi-attacher:v4.8.0
          args:
            - "--csi-address=$(ADDRESS)"
            - "--v=5"
            - "--leader-election"
          env:
            - name: ADDRESS
              value: /var/lib/csi/sockets/pluginproxy/csi.sock
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/csi/sockets/pluginproxy/
        - name: multicloud-csi-plugin
          image: multicloud-csi-driver:0.1.0
          imagePullPolicy: IfNotPresent
          args:
            - "--endpoint=$(CSI_ENDPOINT)"
            - "--nodeid=$(KUBE_NODE_NAME)"
            - "--redis-url=redis://localhost:6379"
            - "--node-url=null"
          env:
            - name: CSI_ENDPOINT
              value: unix:///var/lib/csi/sockets/pluginproxy/csi.sock
            - name: KUBE_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/csi/sockets/pluginproxy/
            - name: multicloud-root
              mountPath: /var/lib/multicloud
          securityContext:
            privileged: true
      volumes:
        - name: socket-dir
          emptyDir: {}
        - name: redis-data
          emptyDir: {}
        - name: multicloud-root
          hostPath:
            path: /var/lib/multicloud
            type: DirectoryOrCreate